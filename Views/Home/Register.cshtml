@model AmaZone.Models.User
@{
    ViewBag.Title = "Register";
}

<h2>Register</h2>
<p>@TempData["pepe"]</p>

@using (Html.BeginForm())
{

    @Html.LabelFor(m => m.username);
    @Html.EditorFor(m => m.username, new { htmlAttributes = new { @class = $"form-control {(ViewData.ModelState.IsValidField("username") ? "" : "is-invalid")}" } });
    @Html.ValidationMessageFor(m => m.username, null, new { @class = "invalid-feedback" })

    @Html.LabelFor(m => m.password);
    @Html.EditorFor(m => m.password, new { htmlAttributes = new { @class = $"form-control {(ViewData.ModelState.IsValidField("password") ? "" : "is-invalid")}" } });
    @Html.ValidationMessageFor(m => m.password, null, new { @class = "invalid-feedback" })

    @Html.LabelFor(m => m.name);
    @Html.EditorFor(m => m.name, new { htmlAttributes = new { @class = $"form-control {(ViewData.ModelState.IsValidField("name") ? "" : "is-invalid")}" } });
    @Html.ValidationMessageFor(m => m.name, null, new { @class = "invalid-feedback" })


    @Html.LabelFor(m => m.UserCode);
    @Html.EditorFor(m => m.UserCode, new { htmlAttributes = new { @class = $"form-control {(ViewData.ModelState.IsValidField("UserCode") ? "" : "is-invalid")}" } });
    @Html.ValidationMessageFor(m => m.UserCode, null, new { @class = "invalid-feedback" })

    <hr />
    <button class="btn btn-warning" type="submit">Submit</button>


}

